From: stanislav shalunov <shalunov@internet2.edu>
Date: Mon Oct 20, 2003  1:10:45 PM US/Pacific
To: pfldnet2004@george.lbl.gov
Subject: Testing FAST TCP over Abilene

[This is an abstract submission in re http://www-didc.lbl.gov/PFLDnet2004/]

A series of tests was conducted with live streams (a mix or FAST and
Reno TCP variants, with most of the heavy traffic generated by FAST
TCP) over the Abilene network.

The goal of the tests was to see how well FAST TCP runs with
conventional TCP.  To do so, a total of 8 machines with independent
1Gb/s paths to Abilene are used to send four streams of data so that a
2.5Gb/s bottleneck can become congested.

Two series of tests have been conducted so far: the first series of
tests was preliminary to establish basic trust in FAST TCP and its
ability to run in a regime that does not starve Reno TCP (and other
production traffic).  The results of this tentative test with 5-minute
streams can be found at
http://www.internet2.edu/~shalunov/fast-tcp-abilene/ and the
provisional interpretation of its results is as follows:

* FAST TCP seems to co-exist reasonably well with Reno TCP. 

* The levels of loss in the network induced by four high-performance
  streams, two of which were FAST, should not be perceptible by
  low-throughput production-type streams.

* FAST TCP, in the presense of competing flows (either FAST or Reno,
  whether the bottleneck is saturated or not), appears to take up
  bandwidth much more gently than it does when running alone, still
  achieving very good utilization.

Having gained confidence, we conducted a second series of tests, now
with 1-hour streams.  This was the first time ever when an OC-48
(2.5Gb/s) link within Abilene or adjacent to Abilene was congested;
and this happened while it was carrying production traffic.

This testing is ongoing work and the results of the second round of
testing were presented at the 2003 Fall Internet2 Member Meeting
(http://www.internet2.edu/~shalunov/talks/20031015-Indianapolis-FAST-TCP-Abilene-Testing.pdf).
The provisional interpetation of the results is as follows:

* Reno almost retained throughput even during congestion

* Reno had nearly constant RTT even during congestion (57ms vs 62ms,
  or about 2ms per FAST stream)

* Reno suffered *no single loss* even during congestion

* While congesting network, FAST streams appear to equalize RTT

  - But, since Reno sharing bottleneck does not experience
    any significant increase of queueing delay, FAST
    queues have to be internal to the hosts

* Presence of several competing FAST flows actually seems to stabilize
  their behavior

We are only just beginning this work.  Questions to be answered
include:

* Can one better extract information about the network delays from
  samples of RTT time than by using the current exponentially decaying
  averaging?  (Perhaps a more robust dampening filter would work
  better.)

* Can 2ms/FAST stream persistent queuing delay be reduced further?

* Do streams stall often like they did once during the second round of
  testing?

* Would interactive users notice the presence of FAST streams making
  full use of the link?

* How much is the late-comers' advantage?

* More dynamic testing to see FAST TCP behavior under a wide
  variety of network conditions.


Thank you very much for your kind consideration,
-- 
Stanislav Shalunov		http://www.internet2.edu/~shalunov/

This message is designed to be viewed in boustrophedon.
